FROM nginx:alpine

# Agregar herramientas de red y monitoreo
RUN apk add --no-cache curl bash jq sed netcat-openbsd

# Crear script wait-for-it para verificar disponibilidad de servicios
RUN echo '#!/bin/bash\n\
\n\
TIMEOUT=15\n\
QUIET=0\n\
\n\
echoerr() { if [[ $QUIET -ne 1 ]]; then echo "$@" 1>&2; fi; }\n\
\n\
usage() {\n\
  exitcode="$1"\n\
  cat << USAGE >&2\n\
Usage: $0 host:port [-t timeout] [-- command args]\n\
USAGE\n\
  exit "$exitcode"\n\
}\n\
\n\
wait_for() {\n\
  for i in `seq $TIMEOUT` ; do\n\
    nc -z "$HOST" "$PORT" > /dev/null 2>&1\n\
    result=$?\n\
    if [ $result -eq 0 ] ; then\n\
      if [ $# -gt 0 ] ; then\n\
        exec "$@"\n\
      fi\n\
      return 0\n\
    fi\n\
    sleep 1\n\
  done\n\
  return 1\n\
}\n\
\n\
while [ $# -gt 0 ]\n\
do\n\
  case "$1" in\n\
    *:* )\n\
    hostport=(${1//:/ })\n\
    HOST=${hostport[0]}\n\
    PORT=${hostport[1]}\n\
    shift 1\n\
    ;;\n\
    -q | --quiet)\n\
    QUIET=1\n\
    shift 1\n\
    ;;\n\
    -t)\n\
    TIMEOUT="$2"\n\
    if [ -z "$TIMEOUT" ]; then break; fi\n\
    shift 2\n\
    ;;\n\
    --)\n\
    shift\n\
    break\n\
    ;;\n\
    --help)\n\
    usage 0\n\
    ;;\n\
    *)\n\
    echoerr "Unknown argument: $1"\n\
    usage 1\n\
    ;;\n\
  esac\n\
done\n\
\n\
if [ "$HOST" = "" -o "$PORT" = "" ]; then\n\
  echoerr "Error: you need to provide a host and port to test."\n\
  usage 2\n\
fi\n\
\n\
wait_for "$@"' > /usr/local/bin/wait-for-it.sh

RUN chmod +x /usr/local/bin/wait-for-it.sh

# Crear script de health check mejorado
RUN echo '#!/bin/bash\n\
echo "Verificando estado de nginx..."\n\
nginx -t > /dev/null 2>&1\n\
if [ $? -ne 0 ]; then\n\
  echo "Error en configuración nginx"\n\
  exit 1\n\
fi\n\
\n\
# Comprobar que nginx está funcionando\n\
if ! pgrep -x "nginx" > /dev/null; then\n\
  echo "Nginx no está en ejecución"\n\
  exit 1\n\
fi\n\
\n\
# Intentar conectar a los servicios\n\
echo "Verificando conexión a servicios..."\n\
SERVICES_OK=true\n\
\n\
if ! curl -s -m 2 http://user-service:3001/health > /dev/null 2>&1; then\n\
  echo "Advertencia: Servicio de usuarios no disponible"\n\
  SERVICES_OK=false\n\
fi\n\
\n\
if ! curl -s -m 2 http://product-service:3002/health > /dev/null 2>&1; then\n\
  echo "Advertencia: Servicio de productos no disponible"\n\
  SERVICES_OK=false\n\
fi\n\
\n\
# Reportar error si los servicios esenciales no están disponibles\n\
if [ "$SERVICES_OK" = true ]; then\n\
  echo "Todo correcto - Todos los servicios disponibles"\n\
  exit 0\n\
else\n\
  echo "Error: Servicios críticos no disponibles"\n\
  # En producción debe fallar, en desarrollo puede continuar\n\
  if [ "$STRICT_HEALTH_CHECK" = "true" ]; then\n\
    exit 1\n\
  else\n\
    exit 0\n\
  fi\n\
fi' > /usr/local/bin/health-check.sh

RUN chmod +x /usr/local/bin/health-check.sh

# Copiar configuración
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Modificar script de inicio para manejar variables de entorno
RUN echo '#!/bin/bash\n\
echo "Esperando servicios..."\n\
\n\
# Default para CORS_ORIGIN si no está definido\n\
if [ -z "$CORS_ORIGIN" ]; then\n\
  export CORS_ORIGIN="*"\n\
  echo "CORS_ORIGIN no definido, usando valor por defecto (*)" \n\
fi\n\
\n\
# Configurar CORS_ORIGIN en nginx.conf\n\
sed -i "s/\${CORS_ORIGIN}/$CORS_ORIGIN/g" /etc/nginx/conf.d/default.conf\n\
\n\
# Intentos de conexión a servicios con mejor manejo de errores\n\
echo "Intentando conectar con user-service:3001..."\n\
/usr/local/bin/wait-for-it.sh user-service:3001 -t 120 || echo "⚠️ Advertencia: Servicio de usuarios no disponible después de 120s"\n\
\n\
echo "Intentando conectar con product-service:3002..."\n\
/usr/local/bin/wait-for-it.sh product-service:3002 -t 120 || echo "⚠️ Advertencia: Servicio de productos no disponible después de 120s"\n\
\n\
echo "Iniciando nginx..."\n\
\n\
# Verificar la configuración de nginx antes de iniciar\n\
echo "Verificando configuración de nginx..."\n\
nginx -t\n\
\n\
if [ $? -ne 0 ]; then\n\
  echo "ERROR: La configuración de nginx tiene errores. Revise los logs."\n\
  exit 1\n\
fi\n\
\n\
echo "Configuración completa. Iniciando nginx en primer plano..."\n\
nginx -g "daemon off;"' > /start.sh

RUN chmod +x /start.sh

# Healthcheck para Docker con tiempos más apropiados
HEALTHCHECK --interval=30s --timeout=5s --start-period=30s --retries=3 \
  CMD /usr/local/bin/health-check.sh

# Punto de entrada
CMD ["/start.sh"]