FROM nginx:alpine

# Agregar herramientas de red y monitoreo
RUN apk add --no-cache curl bash jq

# Crear script wait-for-it para verificar disponibilidad de servicios
RUN echo '#!/bin/bash\n\
\n\
TIMEOUT=15\n\
QUIET=0\n\
\n\
echoerr() { if [[ $QUIET -ne 1 ]]; then echo "$@" 1>&2; fi; }\n\
\n\
usage() {\n\
  exitcode="$1"\n\
  cat << USAGE >&2\n\
Usage: $0 host:port [-t timeout] [-- command args]\n\
USAGE\n\
  exit "$exitcode"\n\
}\n\
\n\
wait_for() {\n\
  for i in `seq $TIMEOUT` ; do\n\
    nc -z "$HOST" "$PORT" > /dev/null 2>&1\n\
    result=$?\n\
    if [ $result -eq 0 ] ; then\n\
      if [ $# -gt 0 ] ; then\n\
        exec "$@"\n\
      fi\n\
      exit 0\n\
    fi\n\
    sleep 1\n\
  done\n\
  echo "Operation timed out" >&2\n\
  exit 1\n\
}\n\
\n\
while [ $# -gt 0 ]\n\
do\n\
  case "$1" in\n\
    *:* )\n\
    HOST=$(printf "%s\n" "$1"| cut -d : -f 1)\n\
    PORT=$(printf "%s\n" "$1"| cut -d : -f 2)\n\
    shift 1\n\
    ;;\n\
    -t)\n\
    TIMEOUT="$2"\n\
    if [ -z "$TIMEOUT" ] ; then break; fi\n\
    shift 2\n\
    ;;\n\
    --)\n\
    shift\n\
    break\n\
    ;;\n\
    *)\n\
    echoerr "Unknown argument: $1"\n\
    usage 1\n\
    ;;\n\
  esac\n\
done\n\
\n\
if [ "$HOST" = "" -o "$PORT" = "" ]; then\n\
  echoerr "Error: you need to provide a host and port to test."\n\
  usage 2\n\
fi\n\
\n\
wait_for "$@"' > /usr/local/bin/wait-for-it.sh

RUN chmod +x /usr/local/bin/wait-for-it.sh

# Crear script de health check
RUN echo '#!/bin/sh\n\
echo "Verificando estado de nginx..."\n\
nginx -t > /dev/null 2>&1\n\
if [ $? -ne 0 ]; then\n\
  echo "Error en configuración de nginx"\n\
  exit 1\n\
fi\n\
\n\
echo "Verificando conexión a servicios..."\n\
curl -s http://user-service:3001/health > /dev/null || exit 1\n\
curl -s http://product-service:3002/health > /dev/null || exit 1\n\
\n\
echo "Todo correcto"\n\
exit 0' > /usr/local/bin/health-check.sh

RUN chmod +x /usr/local/bin/health-check.sh

# Copiar configuración
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Crear script de inicio
RUN echo '#!/bin/bash\n\
echo "Esperando servicios..."\n\
/usr/local/bin/wait-for-it.sh user-service:3001 -t 60 || echo "Advertencia: Servicio de usuarios no disponible"\n\
/usr/local/bin/wait-for-it.sh product-service:3002 -t 60 || echo "Advertencia: Servicio de productos no disponible"\n\
\n\
echo "Iniciando nginx..."\n\
# Sustituir variables de entorno si existen\n\
if [ ! -z "$FRONTEND_URL" ]; then\n\
  sed -i "s/FRONTEND_URL_VALUE/$FRONTEND_URL/g" /etc/nginx/conf.d/default.conf\n\
fi\n\
\n\
# Iniciar nginx en primer plano\n\
nginx -g "daemon off;"' > /start.sh

RUN chmod +x /start.sh

# Healthcheck para Docker
HEALTHCHECK --interval=30s --timeout=5s --start-period=30s --retries=3 \
  CMD /usr/local/bin/health-check.sh

# Punto de entrada
CMD ["/start.sh"]