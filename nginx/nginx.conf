events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    upstream user_service {
        server user-service:3001;
    }

    upstream product_service {
        server product-service:3002;
    }

    server {
        listen 80;
        
        # Configuración CORS mejorada con variables de entorno
        set $cors_origin "${CORS_ORIGIN}";
        add_header 'Access-Control-Allow-Origin' $cors_origin always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Manejar preflight requests globalmente
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $cors_origin;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # Proxy para servicio de usuarios con tiempos de espera mejorados
        location /users {
            proxy_pass http://user_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Manejo de errores
            error_page 502 504 =503 @user_service_unavailable;
        }
        
        # Proxy para servicio de productos con tiempos de espera mejorados
        location /products {
            proxy_pass http://product_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Manejo de errores
            error_page 502 504 =503 @product_service_unavailable;
        }
        
        # Páginas de error personalizadas
        location @user_service_unavailable {
            default_type application/json;
            return 503 '{"error":"User service temporarily unavailable"}';
        }
        
        location @product_service_unavailable {
            default_type application/json;
            return 503 '{"error":"Product service temporarily unavailable"}';
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 '{"status":"healthy","nginx":"running"}';
            add_header Content-Type application/json;
        }
        
        # Root location para verificación
        location / {
            return 200 '{"status":"ok","message":"API Gateway funcionando"}';
            add_header Content-Type application/json;
        }
    }
}